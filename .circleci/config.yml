# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6-jessie-node
        environment:
          CIRCLECI: true
          PGHOST: 127.0.0.1
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: democracy_club

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}


      - run:
          name: install Tox
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install tox coveralls
      - run:
          name: Install HTML Tidy
          command: wget https://github.com/htacg/tidy-html5/releases/download/5.8.0/tidy-5.8.0-Linux-64bit.deb && sudo dpkg -i tidy-5.8.0-Linux-64bit.deb
      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
            tox --notest --workdir /home/circleci/repo/.tox/
      - save_cache:
          paths:
            - ./.venv
            - /home/circleci/repo/.tox/
          key: v1-dependencies-{{ checksum "requirements/base.txt" }}-{{ checksum "requirements/testing.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . .venv/bin/activate
            tox --workdir /home/circleci/repo/.tox/
      # Coverage
      - run:
          name: Update Coveralls
          command: |
            . .venv/bin/activate
            coveralls
      - store_artifacts:
          path: test-reports
          destination: test-reports
