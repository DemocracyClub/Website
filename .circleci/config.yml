version: 2.1
orbs:
  codecov: codecov/codecov@3.1.0

jobs:
  install_and_update_dependencies:
    docker:
      - image: cimg/python:3.8.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Pipfile.lock" }}
      - run: &install-pipenv pip install -U pipenv urllib3 pip --quiet --no-input
      - run: pipenv install --dev
      - run: pipenv run pipenv check # before save_cache so an insecure cache is never saved
      - run: make lambda-layers/DependenciesLayer/requirements.txt
      - persist_to_workspace:
          root: ~/repo/
          paths: [ lambda-layers/DependenciesLayer/requirements.txt ]
      - save_cache:
          when: on_success
          paths:
            - ~/.local/share/virtualenvs/
          key: v2-dependencies-{{ checksum "Pipfile.lock" }}

  test:
    docker:
      - image: cimg/python:3.8.12
        environment:
          CIRCLECI: true
          PGHOST: 127.0.0.1
      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: democracy_club
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install HTML Tidy
          command: wget https://github.com/htacg/tidy-html5/releases/download/5.8.0/tidy-5.8.0-Linux-64bit.deb && sudo dpkg -i tidy-5.8.0-Linux-64bit.deb
      - run: *install-pipenv
      - run: pipenv run black-check
      - run: pipenv run pytest --flakes
      - run: pipenv run pytest --cov-report= --cov=democracy_club --junitxml=test-results/junit.xml
      - codecov/upload:
          file: /home/circleci/repo/test-results/junit.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports

  sam_build:
    docker:
      - image: amazon/aws-sam-cli-build-image-python3.8:latest
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/
      - run: pip install --upgrade pip
      - run: pip install -r lambda-layers/DependenciesLayer/requirements.txt
      - run: make collectstatic
      - run: sam build ${DASH_DASH_DEBUG} --template-file sam-template.yaml
      - persist_to_workspace:
          root: ~/repo/
          paths: [ .aws-sam/build/ ]


workflows:
  version: 2
  test_build_deploy:
    jobs:
      - install_and_update_dependencies
      - test:
          requires:
            - install_and_update_dependencies
      - sam_build:
          requires:
            - test
